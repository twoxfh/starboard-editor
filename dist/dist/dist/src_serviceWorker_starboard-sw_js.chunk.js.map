{"version":3,"file":"src_serviceWorker_starboard-sw_js.chunk.js","mappings":"eAAA,KAAK,iBAAiB,UAAW,UAAY,CAC3C,KAAK,YAAY,CACnB,CAAC,EAED,KAAK,iBAAiB,WAAaA,GAAU,CAC3CA,EAAM,UAAU,KAAK,QAAQ,MAAM,CAAC,CACtC,CAAC,EAED,KAAK,iBAAiB,UAAYC,GAAO,C,QACnC,EAAAA,EAAG,OAAH,cAAS,QAAS,0CACpB,KAAK,aACF,WAAW,EACX,KAAK,UAAY,CAChB,OAAO,KAAK,QAAQ,SAAS,CAC/B,CAAC,EACA,KAAK,SAAUC,EAAS,CACvBA,EAAQ,QAASC,GAAWA,EAAO,SAASA,EAAO,GAAG,CAAC,CACzD,CAAC,CAEP,CAAC,EAED,KAAK,iBAAiB,QAAS,SAAUH,EAAO,CAC1CA,EAAM,QAAQ,QAAU,kBAAoBA,EAAM,QAAQ,OAAS,eAIvEA,EAAM,YACJ,MAAMA,EAAM,OAAO,EAChB,KAAK,SAAUI,EAAU,CACxB,GAAIA,EAAS,SAAW,EACtB,OAAOA,EAOT,MAAMC,EAAa,IAAI,QAAQD,EAAS,OAAO,EAC/C,OAAAC,EAAW,IAAI,+BAAgC,cAAc,EAC7DA,EAAW,IAAI,6BAA8B,aAAa,EAEnC,IAAI,SAASD,EAAS,KAAM,CACjD,OAAQA,EAAS,OACjB,WAAYA,EAAS,WACrB,QAASC,CACX,CAAC,CAGH,CAAC,EACA,MAAM,SAAU,EAAG,CAClB,QAAQ,MAAM,CAAC,CACjB,CAAC,CACL,CACF,CAAC,C","sources":["webpack://starboard-notebook/./src/serviceWorker/starboard-sw.js"],"sourcesContent":["self.addEventListener(\"install\", function () {\n  self.skipWaiting();\n});\n\nself.addEventListener(\"activate\", (event) => {\n  event.waitUntil(self.clients.claim());\n});\n\nself.addEventListener(\"message\", (ev) => {\n  if (ev.data?.type === \"removeCrossOriginIsolatedServiceWorker\") {\n    self.registration\n      .unregister()\n      .then(function () {\n        return self.clients.matchAll();\n      })\n      .then(function (clients) {\n        clients.forEach((client) => client.navigate(client.url));\n      });\n  }\n});\n\nself.addEventListener(\"fetch\", function (event) {\n  if (event.request.cache === \"only-if-cached\" && event.request.mode !== \"same-origin\") {\n    return;\n  }\n\n  event.respondWith(\n    fetch(event.request)\n      .then(function (response) {\n        if (response.status === 0) {\n          return response;\n        }\n\n        // It seems like we only need to set the headers for index.html\n        // If you want to be on the safe side, comment this out\n        //if (!response.url.includes(\"index.html\")) return response;\n\n        const newHeaders = new Headers(response.headers);\n        newHeaders.set(\"Cross-Origin-Embedder-Policy\", \"require-corp\");\n        newHeaders.set(\"Cross-Origin-Opener-Policy\", \"same-origin\");\n\n        const moddedResponse = new Response(response.body, {\n          status: response.status,\n          statusText: response.statusText,\n          headers: newHeaders,\n        });\n\n        return moddedResponse;\n      })\n      .catch(function (e) {\n        console.error(e);\n      })\n  );\n});\n"],"names":["event","ev","clients","client","response","newHeaders"],"sourceRoot":""}